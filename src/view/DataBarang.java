/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;
import koneksi.koneksidatabase;
import model.Barang;
import java.sql.*;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;  
import javax.swing.ListSelectionModel;       
import java.text.DecimalFormat;             
import java.util.HashMap;
import java.util.Map;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;
/**
 *
 * @author Kelompok 2
 */
public class DataBarang extends javax.swing.JFrame {

    /**
     * Creates new form DataBarang
     */
    public DataBarang() {
        initComponents();
        refreshTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtKodeBarang = new javax.swing.JTextField();
        txtNamaBarang = new javax.swing.JTextField();
        txtStok = new javax.swing.JTextField();
        txtHarga = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        btnCari = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        cari = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelBarang = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();
        btnCetak = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(70, 130, 180));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("DATA BARANG");

        jPanel2.setPreferredSize(new java.awt.Dimension(791, 186));

        jLabel2.setText("Kode Barang");

        jLabel3.setText("Nama Barang");

        jLabel4.setText("Stok");

        jLabel5.setText("Harga");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(35, 35, 35)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtNamaBarang, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                    .addComponent(txtKodeBarang))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 198, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGap(37, 37, 37)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtStok, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                    .addComponent(txtHarga))
                .addGap(48, 48, 48))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(txtKodeBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtStok, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addComponent(txtNamaBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHarga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jButton1.setText("Tambah");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Edit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Hapus");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jPanel3.setPreferredSize(new java.awt.Dimension(791, 186));

        btnCari.setText("Cari");
        btnCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCariActionPerformed(evt);
            }
        });

        jLabel6.setText("Cari Barang");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(413, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cari, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnCari)
                .addGap(27, 27, 27))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(btnCari))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setPreferredSize(new java.awt.Dimension(791, 186));

        tabelBarang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Kode Barang", "Nama Barang", "Stok", "Harga"
            }
        ));
        tabelBarang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelBarangMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelBarang);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 764, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE)
                .addContainerGap())
        );

        jButton5.setText("X");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        btnCetak.setText("Cetak");
        btnCetak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCetakActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(217, 217, 217)
                                .addComponent(jButton1)
                                .addGap(44, 44, 44)
                                .addComponent(jButton2)
                                .addGap(59, 59, 59)
                                .addComponent(jButton3)
                                .addGap(42, 42, 42)
                                .addComponent(btnCetak))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 799, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 799, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(240, 240, 240)
                        .addComponent(jButton5)
                        .addGap(16, 16, 16)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jButton5)
                        .addGap(4, 4, 4))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(146, 146, 146)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton2)
                            .addComponent(jButton3)
                            .addComponent(btnCetak))))
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public boolean tambahBarang(Barang barang) {
        String sql = "INSERT INTO barang (kode_barang, nama_barang, stok, harga) VALUES (?, ?, ?, ?)";

        try (Connection conn = koneksidatabase.getConnection();
             PreparedStatement pst = conn.prepareStatement(sql)) {

            if (conn == null) {
                JOptionPane.showMessageDialog(null, "Koneksi Database Gagal!");
                return false;
            }

            pst.setString(1, barang.getKodeBarang());
            pst.setString(2, barang.getNamaBarang());
            pst.setInt(3, barang.getStok());
            pst.setDouble(4, barang.getHarga());

            return pst.executeUpdate() > 0;
            
        } catch (SQLException e) {
            System.err.println("Gagal Menambah Barang: " + e.getMessage());
            return false;
        }
    }
    
    
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String kodeBarang = txtKodeBarang.getText();
        String namaBarang = txtNamaBarang.getText();
        int stok = Integer.parseInt(txtStok.getText());
        double harga = Double.parseDouble(txtHarga.getText());

        Barang barang = new Barang(kodeBarang, namaBarang, stok, harga);

        // Panggil method tambahBarang dengan parameter
        if (tambahBarang(barang)) {
            JOptionPane.showMessageDialog(null, "Barang berhasil ditambahkan!");
            // Clear form setelah berhasil
            clearForm();
            refreshTable();
        } else {
            JOptionPane.showMessageDialog(null, "Gagal menambahkan barang!");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    public boolean hapusBarang(String kodeBarang) {
        String sql = "DELETE FROM barang WHERE kode_barang = ?";

        try (Connection conn = koneksidatabase.getConnection();
             PreparedStatement pst = conn.prepareStatement(sql)) {

            if (conn == null) {
                JOptionPane.showMessageDialog(null, "Koneksi Database Gagal!");
                return false;
            }

            pst.setString(1, kodeBarang);
            return pst.executeUpdate() > 0;
        } catch (SQLException e) {
            System.err.println("Gagal Menghapus Barang: " + e.getMessage());
            return false;
        }
    }
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
        // Pilihan 1: Ambil dari JTextField
        String kodeBarang = txtKodeBarang.getText().trim();
        
        // Pilihan 2: Ambil dari JTable (jika ada)
        /*
        int selectedRow = tabelBarang.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(null, "Pilih barang yang akan dihapus!");
            return;
        }
        String kodeBarang = tabelBarang.getValueAt(selectedRow, 0).toString();
        */
        
        // Validasi
        if (kodeBarang.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Pilih atau masukkan kode barang yang akan dihapus!");
            return;
        }
        
        // Konfirmasi hapus dengan detail barang
        int konfirmasi = JOptionPane.showConfirmDialog(
            null,
            "Yakin ingin menghapus barang?\n" +
            "Kode Barang: " + kodeBarang + "\n" +
            "Data yang dihapus tidak dapat dikembalikan!",
            "Konfirmasi Hapus Barang",
            JOptionPane.YES_NO_OPTION,
            JOptionPane.WARNING_MESSAGE
        );
        
        if (konfirmasi == JOptionPane.YES_OPTION) {
            if (hapusBarang(kodeBarang)) {
                JOptionPane.showMessageDialog(null, 
                    "Barang dengan kode " + kodeBarang + " berhasil dihapus!",
                    "Hapus Berhasil",
                    JOptionPane.INFORMATION_MESSAGE);
                clearForm();
                refreshTable();
            } else {
                JOptionPane.showMessageDialog(null, 
                    "Gagal menghapus barang!\nPastikan kode barang benar dan ada di database.",
                    "Hapus Gagal",
                    JOptionPane.ERROR_MESSAGE);
            }
        }
        
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, 
            "Terjadi kesalahan: " + e.getMessage(),
            "Error",
            JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    // UPDATE: Edit data barang
    public boolean editBarang(Barang barang) {
        String sql = "UPDATE barang SET nama_barang = ?, harga = ?, stok = ? WHERE kode_barang = ?";

        try (Connection conn = koneksidatabase.getConnection();
             PreparedStatement pst = conn.prepareStatement(sql)) {

            if (conn == null) {
                JOptionPane.showMessageDialog(null, "Koneksi Database Gagal!");
                return false;
            }

            pst.setString(1, barang.getNamaBarang());
            pst.setDouble(2, barang.getHarga());
            pst.setInt(3, barang.getStok());
            pst.setString(4, barang.getKodeBarang());

            return pst.executeUpdate() > 0;

        } catch (SQLException e) {
            System.err.println("Gagal Mengedit Barang: " + e.getMessage());
            return false;
        }
    }
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
        // Ambil data dari form
        String kodeBarang = txtKodeBarang.getText().trim();
        String namaBarang = txtNamaBarang.getText().trim();
        String stokText = txtStok.getText().trim();
        String hargaText = txtHarga.getText().trim();

        
        // Validasi input tidak kosong
        if (kodeBarang.isEmpty() || namaBarang.isEmpty() || 
            hargaText.isEmpty() || stokText.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Semua field harus diisi!");
            return;
        }
        
        // Parse dan validasi harga
        double harga;
        try {
            harga = Double.parseDouble(hargaText);
            if (harga < 0) {
                JOptionPane.showMessageDialog(null, "Harga tidak boleh negatif!");
                return;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Format harga tidak valid! Gunakan angka desimal.");
            return;
        }
        
        // Parse dan validasi stok
        int stok;
        try {
            stok = Integer.parseInt(stokText);
            if (stok < 0) {
                JOptionPane.showMessageDialog(null, "Stok tidak boleh negatif!");
                return;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Format stok tidak valid! Gunakan angka bulat.");
            return;
        }
        
        // Konfirmasi edit
        int konfirmasi = JOptionPane.showConfirmDialog(
            null,
            "Apakah Anda yakin ingin mengubah data barang?\n" +
            "Kode: " + kodeBarang + "\n" +
            "Nama: " + namaBarang + "\n" +
            "Harga: " + harga + "\n" +
            "Stok: " + stok,
            "Konfirmasi Edit",
            JOptionPane.YES_NO_OPTION,
            JOptionPane.QUESTION_MESSAGE
        );
        
        if (konfirmasi == JOptionPane.YES_OPTION) {
            // Buat objek Barang
            Barang barang = new Barang(kodeBarang, namaBarang, stok, harga);
            
            // Panggil method editBarang
            if (editBarang(barang)) {
                JOptionPane.showMessageDialog(null, 
                    "Data barang berhasil diubah!",
                    "Edit Berhasil",
                    JOptionPane.INFORMATION_MESSAGE);
                clearForm();
                 refreshTable(); 
            } else {
                JOptionPane.showMessageDialog(null, 
                    "Gagal mengubah data barang!\nPastikan kode barang benar dan ada di database.",
                    "Edit Gagal",
                    JOptionPane.ERROR_MESSAGE);
            }
        }
        
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, 
            "Terjadi kesalahan: " + e.getMessage(),
            "Error",
            JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void tabelBarangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelBarangMouseClicked
        int selectedRow = tabelBarang.getSelectedRow();
        if (selectedRow != -1) {
        // Ambil data dari baris yang dipilih
            String kodeBarang = tabelBarang.getValueAt(selectedRow, 0).toString();
            String namaBarang = tabelBarang.getValueAt(selectedRow, 1).toString();
            String stok = tabelBarang.getValueAt(selectedRow, 2).toString();
            String harga = tabelBarang.getValueAt(selectedRow, 3).toString();

            // Isi form dengan data yang dipilih (sesuaikan nama field)
            txtKodeBarang.setText(kodeBarang);
            txtNamaBarang.setText(namaBarang);
            txtStok.setText(stok);
            txtHarga.setText(harga);
        }   
    }//GEN-LAST:event_tabelBarangMouseClicked

    private void btnCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCariActionPerformed
       String keyword = cari.getText().trim();
        cariDataPenjualan(keyword);
    }//GEN-LAST:event_btnCariActionPerformed

    private void btnCetakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCetakActionPerformed
        try {
            String reportPath = "src/view/laporan/laporan_barang.jasper";
            Connection conn = koneksidatabase.getConnection();

            Map<String, Object> parameters = new HashMap<>();
            JasperPrint jasperPrint = JasperFillManager.fillReport(reportPath, parameters, conn);
            JasperViewer.viewReport(jasperPrint, false);

            conn.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
    }//GEN-LAST:event_btnCetakActionPerformed

    
     private void cariDataPenjualan(String keyword) {
    DefaultTableModel model = (DefaultTableModel) tabelBarang.getModel();
    model.setRowCount(0); // Bersihkan isi tabel sebelum diisi ulang

    String sql = "SELECT * FROM barang WHERE " +
                 "kode_barang LIKE ? OR nama_barang LIKE ?";
 
    try (Connection conn = koneksidatabase.getConnection();
         PreparedStatement pst = conn.prepareStatement(sql)) {

        String likeKeyword = "%" + keyword + "%";
        pst.setString(1, likeKeyword);
        pst.setString(2, likeKeyword);
        
        ResultSet rs = pst.executeQuery();

        while (rs.next()) {
            Object[] row = {
               rs.getString("kode_barang"),
                    rs.getString("nama_barang"),
                    rs.getInt("stok"),
                    rs.getDouble("harga")
            };
            model.addRow(row);
        }

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Gagal cari data: " + e.getMessage());
    }
}
     
    private void clearForm() {
        txtKodeBarang.setText("");
        txtNamaBarang.setText("");
        txtStok.setText("");
        txtHarga.setText("");
    }
    
    // READ: Ambil semua data barang
    public List<Barang> getAllBarang() {
        List<Barang> listBarang = new ArrayList<>();
        String sql = "SELECT * FROM barang";

        try (Connection conn = koneksidatabase.getConnection();
             Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery(sql)) {

            if (conn == null) {
                JOptionPane.showMessageDialog(null, "Koneksi Database Gagal!");
                return listBarang;
            }

            while (rs.next()) {
                listBarang.add(new Barang(
                    rs.getString("kode_barang"),
                    rs.getString("nama_barang"),
                    rs.getInt("stok"),
                    rs.getDouble("harga")
                ));
            }

        } catch (SQLException e) {
            System.err.println("Gagal Mengambil Data Barang: " + e.getMessage());
        }

        return listBarang;
    }
    
    // METHOD UTAMA: Untuk menampilkan data ke JTable
    private void loadDataToTable() {
    try {
        // Ambil data dari database
        List<Barang> listBarang = getAllBarang();
        
        // Buat model tabel
        DefaultTableModel model = new DefaultTableModel();
        
        // Set kolom header
        model.addColumn("Kode Barang");
        model.addColumn("Nama Barang");
        model.addColumn("Stok");
        model.addColumn("Harga");
        
        // Tambahkan data ke model
        for (Barang barang : listBarang) {
            Object[] row = {
                barang.getKodeBarang(),
                barang.getNamaBarang(),
                barang.getStok(),
                String.format("%.2f", barang.getHarga()) // Format harga dengan 2 desimal
            };
            model.addRow(row);
        }
        
        // Set model ke JTable
        tabelBarang.setModel(model); 
        
        // Optional: Set lebar kolom
        setColumnWidths();
        
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Error memuat data: " + e.getMessage());
        e.printStackTrace();
    }
    }

    // Method untuk mengatur lebar kolom
    private void setColumnWidths() {
        if (tabelBarang.getColumnCount() > 0) {
            tabelBarang.getColumnModel().getColumn(0).setPreferredWidth(100); // Kode Barang
            tabelBarang.getColumnModel().getColumn(1).setPreferredWidth(200); // Nama Barang
            tabelBarang.getColumnModel().getColumn(2).setPreferredWidth(80);  // Stok
            tabelBarang.getColumnModel().getColumn(3).setPreferredWidth(100); // Harga
        }
    }

    // Method untuk refresh tabel setelah operasi CRUD
    private void refreshTable() {
        loadDataToTable();
    }

    // IMPLEMENTASI: Load data saat form dibuka 
    private void formWindowOpened(java.awt.event.WindowEvent evt) {
        loadDataToTable();
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DataBarang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DataBarang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DataBarang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DataBarang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DataBarang().setVisible(true);
            }
        });
    }

    //
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCari;
    private javax.swing.JButton btnCetak;
    private javax.swing.JTextField cari;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelBarang;
    private javax.swing.JTextField txtHarga;
    private javax.swing.JTextField txtKodeBarang;
    private javax.swing.JTextField txtNamaBarang;
    private javax.swing.JTextField txtStok;
    // End of variables declaration//GEN-END:variables
}
